// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raft.proto

package raft

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// reasons for why appendEntries and requestVote might fail
type ErrorCode int32

const (
	ErrorCode_NONE       ErrorCode = 0
	ErrorCode_TERM_ERROR ErrorCode = 1
	ErrorCode_LOG_ERROR  ErrorCode = 2
)

var ErrorCode_name = map[int32]string{
	0: "NONE",
	1: "TERM_ERROR",
	2: "LOG_ERROR",
}

var ErrorCode_value = map[string]int32{
	"NONE":       0,
	"TERM_ERROR": 1,
	"LOG_ERROR":  2,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{0}
}

// data stored per entry
type Entry struct {
	Term                 int32    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Index                int32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Command              string   `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}
func (*Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{0}
}

func (m *Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entry.Unmarshal(m, b)
}
func (m *Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entry.Marshal(b, m, deterministic)
}
func (m *Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entry.Merge(m, src)
}
func (m *Entry) XXX_Size() int {
	return xxx_messageInfo_Entry.Size(m)
}
func (m *Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Entry proto.InternalMessageInfo

func (m *Entry) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *Entry) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Entry) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

type RequestVoteRequest struct {
	Term                 int32    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	CandidateId          int32    `protobuf:"varint,2,opt,name=candidateId,proto3" json:"candidateId,omitempty"`
	LastLogIndex         int32    `protobuf:"varint,3,opt,name=lastLogIndex,proto3" json:"lastLogIndex,omitempty"`
	LastLogTerm          int32    `protobuf:"varint,4,opt,name=lastLogTerm,proto3" json:"lastLogTerm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestVoteRequest) Reset()         { *m = RequestVoteRequest{} }
func (m *RequestVoteRequest) String() string { return proto.CompactTextString(m) }
func (*RequestVoteRequest) ProtoMessage()    {}
func (*RequestVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{1}
}

func (m *RequestVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteRequest.Unmarshal(m, b)
}
func (m *RequestVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteRequest.Marshal(b, m, deterministic)
}
func (m *RequestVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteRequest.Merge(m, src)
}
func (m *RequestVoteRequest) XXX_Size() int {
	return xxx_messageInfo_RequestVoteRequest.Size(m)
}
func (m *RequestVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteRequest proto.InternalMessageInfo

func (m *RequestVoteRequest) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RequestVoteRequest) GetCandidateId() int32 {
	if m != nil {
		return m.CandidateId
	}
	return 0
}

func (m *RequestVoteRequest) GetLastLogIndex() int32 {
	if m != nil {
		return m.LastLogIndex
	}
	return 0
}

func (m *RequestVoteRequest) GetLastLogTerm() int32 {
	if m != nil {
		return m.LastLogTerm
	}
	return 0
}

type RequestVoteResponse struct {
	Term        int32 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	VoteGranted bool  `protobuf:"varint,2,opt,name=voteGranted,proto3" json:"voteGranted,omitempty"`
	// optional: error code on why voteGranted is false
	// Values are optional by default
	Reason               ErrorCode `protobuf:"varint,3,opt,name=reason,proto3,enum=raft.ErrorCode" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RequestVoteResponse) Reset()         { *m = RequestVoteResponse{} }
func (m *RequestVoteResponse) String() string { return proto.CompactTextString(m) }
func (*RequestVoteResponse) ProtoMessage()    {}
func (*RequestVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{2}
}

func (m *RequestVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteResponse.Unmarshal(m, b)
}
func (m *RequestVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteResponse.Marshal(b, m, deterministic)
}
func (m *RequestVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteResponse.Merge(m, src)
}
func (m *RequestVoteResponse) XXX_Size() int {
	return xxx_messageInfo_RequestVoteResponse.Size(m)
}
func (m *RequestVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteResponse proto.InternalMessageInfo

func (m *RequestVoteResponse) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RequestVoteResponse) GetVoteGranted() bool {
	if m != nil {
		return m.VoteGranted
	}
	return false
}

func (m *RequestVoteResponse) GetReason() ErrorCode {
	if m != nil {
		return m.Reason
	}
	return ErrorCode_NONE
}

type AppendEntriesRequest struct {
	Term                 int32    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderId             int32    `protobuf:"varint,2,opt,name=leaderId,proto3" json:"leaderId,omitempty"`
	PrevLogIndex         int32    `protobuf:"varint,3,opt,name=prevLogIndex,proto3" json:"prevLogIndex,omitempty"`
	PrevLogTerm          int32    `protobuf:"varint,4,opt,name=prevLogTerm,proto3" json:"prevLogTerm,omitempty"`
	LeaderCommit         int32    `protobuf:"varint,5,opt,name=leaderCommit,proto3" json:"leaderCommit,omitempty"`
	Entries              []*Entry `protobuf:"bytes,6,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendEntriesRequest) Reset()         { *m = AppendEntriesRequest{} }
func (m *AppendEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesRequest) ProtoMessage()    {}
func (*AppendEntriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{3}
}

func (m *AppendEntriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesRequest.Unmarshal(m, b)
}
func (m *AppendEntriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesRequest.Marshal(b, m, deterministic)
}
func (m *AppendEntriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesRequest.Merge(m, src)
}
func (m *AppendEntriesRequest) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesRequest.Size(m)
}
func (m *AppendEntriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesRequest proto.InternalMessageInfo

func (m *AppendEntriesRequest) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesRequest) GetLeaderId() int32 {
	if m != nil {
		return m.LeaderId
	}
	return 0
}

func (m *AppendEntriesRequest) GetPrevLogIndex() int32 {
	if m != nil {
		return m.PrevLogIndex
	}
	return 0
}

func (m *AppendEntriesRequest) GetPrevLogTerm() int32 {
	if m != nil {
		return m.PrevLogTerm
	}
	return 0
}

func (m *AppendEntriesRequest) GetLeaderCommit() int32 {
	if m != nil {
		return m.LeaderCommit
	}
	return 0
}

func (m *AppendEntriesRequest) GetEntries() []*Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type AppendEntriesResponse struct {
	Term    int32 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success bool  `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// optional: error code on why fail
	// Values are optional by default
	Reason               ErrorCode `protobuf:"varint,3,opt,name=reason,proto3,enum=raft.ErrorCode" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AppendEntriesResponse) Reset()         { *m = AppendEntriesResponse{} }
func (m *AppendEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesResponse) ProtoMessage()    {}
func (*AppendEntriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{4}
}

func (m *AppendEntriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesResponse.Unmarshal(m, b)
}
func (m *AppendEntriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesResponse.Marshal(b, m, deterministic)
}
func (m *AppendEntriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesResponse.Merge(m, src)
}
func (m *AppendEntriesResponse) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesResponse.Size(m)
}
func (m *AppendEntriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesResponse proto.InternalMessageInfo

func (m *AppendEntriesResponse) GetTerm() int32 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *AppendEntriesResponse) GetReason() ErrorCode {
	if m != nil {
		return m.Reason
	}
	return ErrorCode_NONE
}

func init() {
	proto.RegisterEnum("raft.ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterType((*Entry)(nil), "raft.Entry")
	proto.RegisterType((*RequestVoteRequest)(nil), "raft.RequestVoteRequest")
	proto.RegisterType((*RequestVoteResponse)(nil), "raft.RequestVoteResponse")
	proto.RegisterType((*AppendEntriesRequest)(nil), "raft.AppendEntriesRequest")
	proto.RegisterType((*AppendEntriesResponse)(nil), "raft.AppendEntriesResponse")
}

func init() { proto.RegisterFile("raft.proto", fileDescriptor_b042552c306ae59b) }

var fileDescriptor_b042552c306ae59b = []byte{
	// 417 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xcf, 0x6e, 0xd4, 0x30,
	0x10, 0xc6, 0x9b, 0xee, 0xff, 0x59, 0x5a, 0xaa, 0xa1, 0x48, 0x66, 0xb9, 0x44, 0x91, 0x10, 0x2b,
	0x0e, 0x3d, 0x2c, 0xbc, 0x00, 0x2a, 0x51, 0x55, 0x28, 0x5d, 0xc9, 0x54, 0x5c, 0x91, 0x89, 0x07,
	0x14, 0xa9, 0xb1, 0x83, 0xed, 0xae, 0xe0, 0x2d, 0x38, 0xf3, 0x62, 0xbc, 0x0e, 0x8a, 0xe3, 0xac,
	0xbc, 0x25, 0xac, 0xb8, 0xf9, 0xfb, 0xc6, 0x1a, 0x7f, 0xf3, 0xcb, 0x04, 0xc0, 0x88, 0x2f, 0xee,
	0xac, 0x36, 0xda, 0x69, 0x1c, 0x36, 0xe7, 0xec, 0x1d, 0x8c, 0x72, 0xe5, 0xcc, 0x0f, 0x44, 0x18,
	0x3a, 0x32, 0x15, 0x4b, 0xd2, 0x64, 0x39, 0xe2, 0xfe, 0x8c, 0xa7, 0x30, 0x2a, 0x95, 0xa4, 0xef,
	0xec, 0xd0, 0x9b, 0xad, 0x40, 0x06, 0x93, 0x42, 0x57, 0x95, 0x50, 0x92, 0x0d, 0xd2, 0x64, 0x39,
	0xe3, 0x9d, 0xcc, 0x7e, 0x26, 0x80, 0x9c, 0xbe, 0xdd, 0x91, 0x75, 0x1f, 0xb5, 0xa3, 0x70, 0xec,
	0x6d, 0x9d, 0xc2, 0xbc, 0x10, 0x4a, 0x96, 0x52, 0x38, 0xba, 0x94, 0xe1, 0x81, 0xd8, 0xc2, 0x0c,
	0x1e, 0xdc, 0x0a, 0xeb, 0xae, 0xf4, 0xd7, 0x4b, 0x9f, 0x61, 0xe0, 0xaf, 0xec, 0x78, 0x4d, 0x97,
	0xa0, 0x6f, 0x9a, 0x07, 0x86, 0x6d, 0x97, 0xc8, 0xca, 0x1c, 0x3c, 0xda, 0x49, 0x64, 0x6b, 0xad,
	0x2c, 0xfd, 0x2b, 0xd2, 0x46, 0x3b, 0xba, 0x30, 0x42, 0x39, 0x6a, 0x23, 0x4d, 0x79, 0x6c, 0xe1,
	0x73, 0x18, 0x1b, 0x12, 0x56, 0x2b, 0x1f, 0xe6, 0x78, 0xf5, 0xf0, 0xcc, 0xf3, 0xcc, 0x8d, 0xd1,
	0xe6, 0x5c, 0x4b, 0xe2, 0xa1, 0x9c, 0xfd, 0x4e, 0xe0, 0xf4, 0x75, 0x5d, 0x93, 0x92, 0x0d, 0xdc,
	0x92, 0xec, 0x3e, 0x14, 0x0b, 0x98, 0xde, 0x92, 0x90, 0x64, 0xb6, 0x1c, 0xb6, 0xba, 0x81, 0x50,
	0x1b, 0xda, 0xdc, 0x87, 0x10, 0x7b, 0x4d, 0xee, 0xa0, 0x63, 0x08, 0x91, 0xe5, 0x51, 0xfa, 0x8e,
	0xe7, 0xba, 0xaa, 0x4a, 0xc7, 0x46, 0x01, 0x65, 0xe4, 0xe1, 0x33, 0x98, 0x50, 0x9b, 0x95, 0x8d,
	0xd3, 0xc1, 0x72, 0xbe, 0x9a, 0x87, 0xe1, 0x9a, 0xed, 0xe0, 0x5d, 0x2d, 0x53, 0xf0, 0xf8, 0xde,
	0x60, 0x7b, 0x88, 0x32, 0x98, 0xd8, 0xbb, 0xa2, 0x20, 0x6b, 0x03, 0xcd, 0x4e, 0xfe, 0x37, 0xc9,
	0x17, 0xaf, 0x60, 0xb6, 0x35, 0x71, 0x0a, 0xc3, 0xeb, 0xf5, 0x75, 0x7e, 0x72, 0x80, 0xc7, 0x00,
	0x37, 0x39, 0x7f, 0xff, 0x29, 0xe7, 0x7c, 0xcd, 0x4f, 0x12, 0x3c, 0x82, 0xd9, 0xd5, 0xfa, 0x22,
	0xc8, 0xc3, 0xd5, 0xaf, 0x04, 0xc6, 0x1f, 0xc8, 0x6c, 0xc8, 0xe0, 0x1b, 0x98, 0x47, 0x0b, 0x80,
	0xac, 0x7d, 0xe8, 0xef, 0x2d, 0x5d, 0x3c, 0xe9, 0xa9, 0xb4, 0xb3, 0x65, 0x07, 0xf8, 0x16, 0x8e,
	0x76, 0xc6, 0xc6, 0x45, 0x7b, 0xbb, 0xef, 0x23, 0x2f, 0x9e, 0xf6, 0xd6, 0xba, 0x5e, 0x9f, 0xc7,
	0xfe, 0xff, 0x7b, 0xf9, 0x27, 0x00, 0x00, 0xff, 0xff, 0x09, 0xbf, 0x2d, 0x37, 0x8d, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServerClient is the client API for Server service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServerClient interface {
	RequestVote(ctx context.Context, in *RequestVoteRequest, opts ...grpc.CallOption) (*RequestVoteResponse, error)
	AppendEntries(ctx context.Context, in *AppendEntriesRequest, opts ...grpc.CallOption) (*AppendEntriesResponse, error)
}

type serverClient struct {
	cc *grpc.ClientConn
}

func NewServerClient(cc *grpc.ClientConn) ServerClient {
	return &serverClient{cc}
}

func (c *serverClient) RequestVote(ctx context.Context, in *RequestVoteRequest, opts ...grpc.CallOption) (*RequestVoteResponse, error) {
	out := new(RequestVoteResponse)
	err := c.cc.Invoke(ctx, "/raft.Server/RequestVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serverClient) AppendEntries(ctx context.Context, in *AppendEntriesRequest, opts ...grpc.CallOption) (*AppendEntriesResponse, error) {
	out := new(AppendEntriesResponse)
	err := c.cc.Invoke(ctx, "/raft.Server/AppendEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServerServer is the server API for Server service.
type ServerServer interface {
	RequestVote(context.Context, *RequestVoteRequest) (*RequestVoteResponse, error)
	AppendEntries(context.Context, *AppendEntriesRequest) (*AppendEntriesResponse, error)
}

// UnimplementedServerServer can be embedded to have forward compatible implementations.
type UnimplementedServerServer struct {
}

func (*UnimplementedServerServer) RequestVote(ctx context.Context, req *RequestVoteRequest) (*RequestVoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestVote not implemented")
}
func (*UnimplementedServerServer) AppendEntries(ctx context.Context, req *AppendEntriesRequest) (*AppendEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppendEntries not implemented")
}

func RegisterServerServer(s *grpc.Server, srv ServerServer) {
	s.RegisterService(&_Server_serviceDesc, srv)
}

func _Server_RequestVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServer).RequestVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/raft.Server/RequestVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServer).RequestVote(ctx, req.(*RequestVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Server_AppendEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServer).AppendEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/raft.Server/AppendEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServer).AppendEntries(ctx, req.(*AppendEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Server_serviceDesc = grpc.ServiceDesc{
	ServiceName: "raft.Server",
	HandlerType: (*ServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestVote",
			Handler:    _Server_RequestVote_Handler,
		},
		{
			MethodName: "AppendEntries",
			Handler:    _Server_AppendEntries_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "raft.proto",
}
